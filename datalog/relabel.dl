.include "definitions.dl"

Transformation("RelabelVertex").

.decl RelabelVertex(id:number, v:unsigned, ol:unsigned, nl:unsigned)
.output RelabelVertex

RelabelVertex(ord(cat(to_string(vertex),":",to_string(oldLabel),":",to_string(newLabel))),vertex, oldLabel, newLabel):-
    Vertex(vertex),
    VertexLabel(newLabel),
    VertexLabel(oldLabel),
    VertexHasLabel(vertex, oldLabel),
    oldLabel != newLabel.

AddVertexLabel_("RelabelVertex", id, vertex, label):-
    RelabelVertex(id, vertex, _, label).

RemoveVertexLabel_("RelabelVertex", id, vertex, label):-
    RelabelVertex(id, vertex, label, _).

Transformation("RelabelEdge").

.decl RelabelEdge(id:number, v:unsigned, ol:unsigned, nl:unsigned)
.output RelabelEdge

RelabelEdge(ord(cat(to_string(edge),":",to_string(oldLabel),":",to_string(newLabel))),edge, oldLabel, newLabel):-
    Edge(edge, _, _),
    EdgeLabel(newLabel),
    EdgeLabel(oldLabel),
    EdgeHasLabel(edge, oldLabel),
    oldLabel != newLabel.

AddEdgeLabel_("RelabelEdge", id, edge, label):-
    RelabelEdge(id, edge, _, label).

RemoveEdgeLabel_("RelabelEdge", id, edge, label):-
    RelabelEdge(id, edge, label, _).

Transformation("RemoveVertex").

.decl RemoveVertex(id:number,v:unsigned)
.output RemoveVertex

RemoveVertex(ord(to_string(v)), v):-
    Vertex(v).

RemoveVertex_("RemoveVertex", id, v):-
    RemoveVertex(id, v).
